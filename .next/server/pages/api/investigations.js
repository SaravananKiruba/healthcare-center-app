"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/investigations";
exports.ids = ["pages/api/investigations"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/next":
/*!*********************************!*\
  !*** external "next-auth/next" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("next-auth/next");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finvestigations&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cinvestigations%5Cindex.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finvestigations&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cinvestigations%5Cindex.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_investigations_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\investigations\\index.js */ \"(api)/./pages/api/investigations/index.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_investigations_index_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_investigations_index_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/investigations\",\n        pathname: \"/api/investigations\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_investigations_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmludmVzdGlnYXRpb25zJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlNUNhcGklNUNpbnZlc3RpZ2F0aW9ucyU1Q2luZGV4LmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ21FO0FBQ25FO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQywrREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsK0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHRoY2FyZS1jZW50ZXItbmV4dGpzLz9mYTMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcaW52ZXN0aWdhdGlvbnNcXFxcaW5kZXguanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9pbnZlc3RpZ2F0aW9uc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2ludmVzdGlnYXRpb25zXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finvestigations&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cinvestigations%5Cindex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/auth/[...nextauth].js":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_3__.PrismaClient();\nconst authOptions = {\n    providers: [\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default()({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    throw new Error(\"Invalid credentials\");\n                }\n                // Include clinic and branch information in the user query\n                const user = await prisma.user.findUnique({\n                    where: {\n                        email: credentials.email\n                    },\n                    include: {\n                        clinic: true,\n                        branch: true\n                    }\n                });\n                if (!user || !user.isActive) {\n                    throw new Error(\"Invalid credentials\");\n                }\n                const isPasswordValid = await bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().compare(credentials.password, user.hashedPassword);\n                if (!isPasswordValid) {\n                    throw new Error(\"Invalid credentials\");\n                }\n                // Return additional tenant information\n                return {\n                    id: user.id,\n                    email: user.email,\n                    name: user.fullName,\n                    role: user.role,\n                    clinicId: user.clinicId,\n                    branchId: user.branchId,\n                    // Include clinic and branch basic info if available\n                    clinicName: user.clinic?.name,\n                    branchName: user.branch?.name\n                };\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\"\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                // Include tenant information in the JWT\n                token.role = user.role;\n                token.id = user.id;\n                token.clinicId = user.clinicId;\n                token.branchId = user.branchId;\n                token.clinicName = user.clinicName;\n                token.branchName = user.branchName;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token) {\n                // Include tenant information in the session\n                session.user.id = token.id;\n                session.user.role = token.role;\n                session.user.clinicId = token.clinicId;\n                session.user.branchId = token.branchId;\n                session.user.clinicName = token.clinicName;\n                session.user.branchName = token.branchName;\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\"\n    },\n    secret: process.env.NEXTAUTH_SECRET\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()(authOptions));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBaUM7QUFDaUM7QUFDcEM7QUFDZ0I7QUFFOUMsTUFBTUksU0FBUyxJQUFJRCx3REFBWUE7QUFFeEIsTUFBTUUsY0FBYztJQUN6QkMsV0FBVztRQUNUTCxzRUFBbUJBLENBQUM7WUFDbEJNLE1BQU07WUFDTkMsYUFBYTtnQkFDWEMsT0FBTztvQkFBRUMsT0FBTztvQkFBU0MsTUFBTTtnQkFBUTtnQkFDdkNDLFVBQVU7b0JBQUVGLE9BQU87b0JBQVlDLE1BQU07Z0JBQVc7WUFDbEQ7WUFDQSxNQUFNRSxXQUFVTCxXQUFXO2dCQUN6QixJQUFJLENBQUNBLGFBQWFDLFNBQVMsQ0FBQ0QsYUFBYUksVUFBVTtvQkFDakQsTUFBTSxJQUFJRSxNQUFNO2dCQUNsQjtnQkFFQSwwREFBMEQ7Z0JBQzFELE1BQU1DLE9BQU8sTUFBTVgsT0FBT1csSUFBSSxDQUFDQyxVQUFVLENBQUM7b0JBQ3hDQyxPQUFPO3dCQUNMUixPQUFPRCxZQUFZQyxLQUFLO29CQUMxQjtvQkFDQVMsU0FBUzt3QkFDUEMsUUFBUTt3QkFDUkMsUUFBUTtvQkFDVjtnQkFDRjtnQkFFQSxJQUFJLENBQUNMLFFBQVEsQ0FBQ0EsS0FBS00sUUFBUSxFQUFFO29CQUMzQixNQUFNLElBQUlQLE1BQU07Z0JBQ2xCO2dCQUVBLE1BQU1RLGtCQUFrQixNQUFNcEIsdURBQWMsQ0FDMUNNLFlBQVlJLFFBQVEsRUFDcEJHLEtBQUtTLGNBQWM7Z0JBR3JCLElBQUksQ0FBQ0YsaUJBQWlCO29CQUNwQixNQUFNLElBQUlSLE1BQU07Z0JBQ2xCO2dCQUVBLHVDQUF1QztnQkFDdkMsT0FBTztvQkFDTFcsSUFBSVYsS0FBS1UsRUFBRTtvQkFDWGhCLE9BQU9NLEtBQUtOLEtBQUs7b0JBQ2pCRixNQUFNUSxLQUFLVyxRQUFRO29CQUNuQkMsTUFBTVosS0FBS1ksSUFBSTtvQkFDZkMsVUFBVWIsS0FBS2EsUUFBUTtvQkFDdkJDLFVBQVVkLEtBQUtjLFFBQVE7b0JBQ3ZCLG9EQUFvRDtvQkFDcERDLFlBQVlmLEtBQUtJLE1BQU0sRUFBRVo7b0JBQ3pCd0IsWUFBWWhCLEtBQUtLLE1BQU0sRUFBRWI7Z0JBQzNCO1lBQ0Y7UUFDRjtLQUNEO0lBQ0R5QixTQUFTO1FBQ1BDLFVBQVU7SUFDWjtJQUNBQyxXQUFXO1FBQ1QsTUFBTUMsS0FBSSxFQUFFQyxLQUFLLEVBQUVyQixJQUFJLEVBQUU7WUFDdkIsSUFBSUEsTUFBTTtnQkFDUix3Q0FBd0M7Z0JBQ3hDcUIsTUFBTVQsSUFBSSxHQUFHWixLQUFLWSxJQUFJO2dCQUN0QlMsTUFBTVgsRUFBRSxHQUFHVixLQUFLVSxFQUFFO2dCQUNsQlcsTUFBTVIsUUFBUSxHQUFHYixLQUFLYSxRQUFRO2dCQUM5QlEsTUFBTVAsUUFBUSxHQUFHZCxLQUFLYyxRQUFRO2dCQUM5Qk8sTUFBTU4sVUFBVSxHQUFHZixLQUFLZSxVQUFVO2dCQUNsQ00sTUFBTUwsVUFBVSxHQUFHaEIsS0FBS2dCLFVBQVU7WUFDcEM7WUFDQSxPQUFPSztRQUNUO1FBQ0EsTUFBTUosU0FBUSxFQUFFQSxPQUFPLEVBQUVJLEtBQUssRUFBRTtZQUM5QixJQUFJQSxPQUFPO2dCQUNULDRDQUE0QztnQkFDNUNKLFFBQVFqQixJQUFJLENBQUNVLEVBQUUsR0FBR1csTUFBTVgsRUFBRTtnQkFDMUJPLFFBQVFqQixJQUFJLENBQUNZLElBQUksR0FBR1MsTUFBTVQsSUFBSTtnQkFDOUJLLFFBQVFqQixJQUFJLENBQUNhLFFBQVEsR0FBR1EsTUFBTVIsUUFBUTtnQkFDdENJLFFBQVFqQixJQUFJLENBQUNjLFFBQVEsR0FBR08sTUFBTVAsUUFBUTtnQkFDdENHLFFBQVFqQixJQUFJLENBQUNlLFVBQVUsR0FBR00sTUFBTU4sVUFBVTtnQkFDMUNFLFFBQVFqQixJQUFJLENBQUNnQixVQUFVLEdBQUdLLE1BQU1MLFVBQVU7WUFDNUM7WUFDQSxPQUFPQztRQUNUO0lBQ0Y7SUFDQUssT0FBTztRQUNMQyxRQUFRO0lBQ1Y7SUFDQUMsUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxlQUFlO0FBQ3JDLEVBQUU7QUFFRixpRUFBZTFDLGdEQUFRQSxDQUFDSyxZQUFZQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhbHRoY2FyZS1jZW50ZXItbmV4dGpzLy4vcGFnZXMvYXBpL2F1dGgvWy4uLm5leHRhdXRoXS5qcz81MjdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOZXh0QXV0aCBmcm9tICduZXh0LWF1dGgnO1xyXG5pbXBvcnQgQ3JlZGVudGlhbHNQcm92aWRlciBmcm9tICduZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzJztcclxuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcyc7XHJcbmltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcclxuXHJcbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKTtcclxuXHJcbmV4cG9ydCBjb25zdCBhdXRoT3B0aW9ucyA9IHtcclxuICBwcm92aWRlcnM6IFtcclxuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xyXG4gICAgICBuYW1lOiAnY3JlZGVudGlhbHMnLFxyXG4gICAgICBjcmVkZW50aWFsczoge1xyXG4gICAgICAgIGVtYWlsOiB7IGxhYmVsOiAnRW1haWwnLCB0eXBlOiAnZW1haWwnIH0sXHJcbiAgICAgICAgcGFzc3dvcmQ6IHsgbGFiZWw6ICdQYXNzd29yZCcsIHR5cGU6ICdwYXNzd29yZCcgfVxyXG4gICAgICB9LFxyXG4gICAgICBhc3luYyBhdXRob3JpemUoY3JlZGVudGlhbHMpIHtcclxuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XHJcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY3JlZGVudGlhbHMnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEluY2x1ZGUgY2xpbmljIGFuZCBicmFuY2ggaW5mb3JtYXRpb24gaW4gdGhlIHVzZXIgcXVlcnlcclxuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZFVuaXF1ZSh7XHJcbiAgICAgICAgICB3aGVyZToge1xyXG4gICAgICAgICAgICBlbWFpbDogY3JlZGVudGlhbHMuZW1haWxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBpbmNsdWRlOiB7XHJcbiAgICAgICAgICAgIGNsaW5pYzogdHJ1ZSxcclxuICAgICAgICAgICAgYnJhbmNoOiB0cnVlXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmICghdXNlciB8fCAhdXNlci5pc0FjdGl2ZSkge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNyZWRlbnRpYWxzJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBpc1Bhc3N3b3JkVmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShcclxuICAgICAgICAgIGNyZWRlbnRpYWxzLnBhc3N3b3JkLFxyXG4gICAgICAgICAgdXNlci5oYXNoZWRQYXNzd29yZFxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIGlmICghaXNQYXNzd29yZFZhbGlkKSB7XHJcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY3JlZGVudGlhbHMnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFJldHVybiBhZGRpdGlvbmFsIHRlbmFudCBpbmZvcm1hdGlvblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogdXNlci5pZCxcclxuICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxyXG4gICAgICAgICAgbmFtZTogdXNlci5mdWxsTmFtZSxcclxuICAgICAgICAgIHJvbGU6IHVzZXIucm9sZSxcclxuICAgICAgICAgIGNsaW5pY0lkOiB1c2VyLmNsaW5pY0lkLFxyXG4gICAgICAgICAgYnJhbmNoSWQ6IHVzZXIuYnJhbmNoSWQsXHJcbiAgICAgICAgICAvLyBJbmNsdWRlIGNsaW5pYyBhbmQgYnJhbmNoIGJhc2ljIGluZm8gaWYgYXZhaWxhYmxlXHJcbiAgICAgICAgICBjbGluaWNOYW1lOiB1c2VyLmNsaW5pYz8ubmFtZSxcclxuICAgICAgICAgIGJyYW5jaE5hbWU6IHVzZXIuYnJhbmNoPy5uYW1lXHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG4gICAgfSlcclxuICBdLFxyXG4gIHNlc3Npb246IHtcclxuICAgIHN0cmF0ZWd5OiAnand0JyxcclxuICB9LFxyXG4gIGNhbGxiYWNrczoge1xyXG4gICAgYXN5bmMgand0KHsgdG9rZW4sIHVzZXIgfSkge1xyXG4gICAgICBpZiAodXNlcikge1xyXG4gICAgICAgIC8vIEluY2x1ZGUgdGVuYW50IGluZm9ybWF0aW9uIGluIHRoZSBKV1RcclxuICAgICAgICB0b2tlbi5yb2xlID0gdXNlci5yb2xlO1xyXG4gICAgICAgIHRva2VuLmlkID0gdXNlci5pZDtcclxuICAgICAgICB0b2tlbi5jbGluaWNJZCA9IHVzZXIuY2xpbmljSWQ7XHJcbiAgICAgICAgdG9rZW4uYnJhbmNoSWQgPSB1c2VyLmJyYW5jaElkO1xyXG4gICAgICAgIHRva2VuLmNsaW5pY05hbWUgPSB1c2VyLmNsaW5pY05hbWU7XHJcbiAgICAgICAgdG9rZW4uYnJhbmNoTmFtZSA9IHVzZXIuYnJhbmNoTmFtZTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdG9rZW47XHJcbiAgICB9LFxyXG4gICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuIH0pIHtcclxuICAgICAgaWYgKHRva2VuKSB7XHJcbiAgICAgICAgLy8gSW5jbHVkZSB0ZW5hbnQgaW5mb3JtYXRpb24gaW4gdGhlIHNlc3Npb25cclxuICAgICAgICBzZXNzaW9uLnVzZXIuaWQgPSB0b2tlbi5pZDtcclxuICAgICAgICBzZXNzaW9uLnVzZXIucm9sZSA9IHRva2VuLnJvbGU7XHJcbiAgICAgICAgc2Vzc2lvbi51c2VyLmNsaW5pY0lkID0gdG9rZW4uY2xpbmljSWQ7XHJcbiAgICAgICAgc2Vzc2lvbi51c2VyLmJyYW5jaElkID0gdG9rZW4uYnJhbmNoSWQ7XHJcbiAgICAgICAgc2Vzc2lvbi51c2VyLmNsaW5pY05hbWUgPSB0b2tlbi5jbGluaWNOYW1lO1xyXG4gICAgICAgIHNlc3Npb24udXNlci5icmFuY2hOYW1lID0gdG9rZW4uYnJhbmNoTmFtZTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gc2Vzc2lvbjtcclxuICAgIH0sXHJcbiAgfSxcclxuICBwYWdlczoge1xyXG4gICAgc2lnbkluOiAnL2xvZ2luJyxcclxuICB9LFxyXG4gIHNlY3JldDogcHJvY2Vzcy5lbnYuTkVYVEFVVEhfU0VDUkVULFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTmV4dEF1dGgoYXV0aE9wdGlvbnMpO1xyXG4iXSwibmFtZXMiOlsiTmV4dEF1dGgiLCJDcmVkZW50aWFsc1Byb3ZpZGVyIiwiYmNyeXB0IiwiUHJpc21hQ2xpZW50IiwicHJpc21hIiwiYXV0aE9wdGlvbnMiLCJwcm92aWRlcnMiLCJuYW1lIiwiY3JlZGVudGlhbHMiLCJlbWFpbCIsImxhYmVsIiwidHlwZSIsInBhc3N3b3JkIiwiYXV0aG9yaXplIiwiRXJyb3IiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaW5jbHVkZSIsImNsaW5pYyIsImJyYW5jaCIsImlzQWN0aXZlIiwiaXNQYXNzd29yZFZhbGlkIiwiY29tcGFyZSIsImhhc2hlZFBhc3N3b3JkIiwiaWQiLCJmdWxsTmFtZSIsInJvbGUiLCJjbGluaWNJZCIsImJyYW5jaElkIiwiY2xpbmljTmFtZSIsImJyYW5jaE5hbWUiLCJzZXNzaW9uIiwic3RyYXRlZ3kiLCJjYWxsYmFja3MiLCJqd3QiLCJ0b2tlbiIsInBhZ2VzIiwic2lnbkluIiwic2VjcmV0IiwicHJvY2VzcyIsImVudiIsIk5FWFRBVVRIX1NFQ1JFVCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/[...nextauth].js\n");

/***/ }),

/***/ "(api)/./pages/api/investigations/index.js":
/*!*******************************************!*\
  !*** ./pages/api/investigations/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/next */ \"next-auth/next\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_next__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_nextauth___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../auth/[...nextauth] */ \"(api)/./pages/api/auth/[...nextauth].js\");\n\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nasync function handler(req, res) {\n    const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(req, res, _auth_nextauth___WEBPACK_IMPORTED_MODULE_2__.authOptions);\n    if (!session) {\n        return res.status(401).json({\n            error: \"Unauthorized\"\n        });\n    }\n    try {\n        switch(req.method){\n            case \"GET\":\n                const { patientId } = req.query;\n                let investigations;\n                if (patientId) {\n                    console.log(\"Fetching investigations for patient ID:\", patientId);\n                    // Get investigations for specific patient\n                    investigations = await prisma.investigation.findMany({\n                        where: {\n                            patientId: patientId,\n                            // Make this optional during development to simplify testing\n                            ... false ? 0 : {}\n                        },\n                        include: {\n                            patient: {\n                                select: {\n                                    id: true,\n                                    name: true\n                                }\n                            }\n                        },\n                        orderBy: {\n                            date: \"desc\"\n                        }\n                    });\n                } else {\n                    // Get all investigations for user's patients\n                    investigations = await prisma.investigation.findMany({\n                        where: {\n                            patient: {\n                                userId: session.user.id\n                            }\n                        },\n                        include: {\n                            patient: {\n                                select: {\n                                    id: true,\n                                    name: true\n                                }\n                            }\n                        },\n                        orderBy: {\n                            date: \"desc\"\n                        }\n                    });\n                }\n                return res.status(200).json(investigations);\n            case \"POST\":\n                const { patientId: newPatientId, type, details, date, fileUrl, doctor, results, normalRange, followUpNeeded, followUpDate, notes } = req.body;\n                console.log(\"Investigation POST request received:\", JSON.stringify(req.body, null, 2));\n                // Validate required fields with better error handling\n                if (!newPatientId) {\n                    return res.status(400).json({\n                        error: \"Missing required field\",\n                        message: \"Patient ID is required\",\n                        details: \"The patientId field is missing or invalid\"\n                    });\n                }\n                if (!details) {\n                    return res.status(400).json({\n                        error: \"Missing required field\",\n                        message: \"Investigation details are required\",\n                        details: \"The details field is missing or invalid\"\n                    });\n                }\n                if (!date) {\n                    return res.status(400).json({\n                        error: \"Missing required field\",\n                        message: \"Date is required\",\n                        details: \"The date field is missing or invalid\"\n                    });\n                }\n                try {\n                    // Verify patient belongs to user - make this optional in development\n                    let patient;\n                    if (false) {} else {\n                        patient = await prisma.patient.findUnique({\n                            where: {\n                                id: newPatientId\n                            }\n                        });\n                    }\n                    if (!patient) {\n                        return res.status(404).json({\n                            error: \"Patient not found\",\n                            details: `Patient with ID ${newPatientId} not found`\n                        });\n                    }\n                    console.log(\"Creating investigation for patient:\", patient.name);\n                    // Parse date strings to Date objects\n                    let parsedDate = new Date(date);\n                    let parsedFollowUpDate = followUpDate ? new Date(followUpDate) : null;\n                    if (isNaN(parsedDate.getTime())) {\n                        console.error(\"Invalid date format:\", date);\n                        parsedDate = new Date(); // Fallback to current date\n                    }\n                    if (followUpDate && isNaN(parsedFollowUpDate.getTime())) {\n                        console.error(\"Invalid followUpDate format:\", followUpDate);\n                        parsedFollowUpDate = null;\n                    }\n                    const newInvestigation = await prisma.investigation.create({\n                        data: {\n                            type: type || \"General\",\n                            details,\n                            date: parsedDate,\n                            fileUrl: fileUrl || null,\n                            doctor: doctor || null,\n                            results: results || null,\n                            normalRange: normalRange || null,\n                            followUpNeeded: followUpNeeded || false,\n                            followUpDate: parsedFollowUpDate,\n                            notes: notes || null,\n                            patientId: newPatientId\n                        },\n                        include: {\n                            patient: {\n                                select: {\n                                    id: true,\n                                    name: true\n                                }\n                            }\n                        }\n                    });\n                    console.log(\"Investigation created successfully:\", newInvestigation.id);\n                    return res.status(201).json(newInvestigation);\n                } catch (error) {\n                    console.error(\"Error creating investigation:\", error);\n                    return res.status(500).json({\n                        error: \"Failed to create investigation\",\n                        message: error.message,\n                        details: JSON.stringify(error)\n                    });\n                }\n            default:\n                res.setHeader(\"Allow\", [\n                    \"GET\",\n                    \"POST\"\n                ]);\n                return res.status(405).json({\n                    error: `Method ${req.method} not allowed`\n                });\n        }\n    } catch (error) {\n        console.error(\"Database error:\", error);\n        return res.status(500).json({\n            error: \"Internal server error\",\n            details:  true ? error.message : 0\n        });\n    } finally{\n        await prisma.$disconnect();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/investigations/index.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finvestigations&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cinvestigations%5Cindex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();