"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/lib/api/services.js":
/*!*********************************!*\
  !*** ./src/lib/api/services.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvestigationService: function() { return /* binding */ InvestigationService; },\n/* harmony export */   PatientService: function() { return /* binding */ PatientService; },\n/* harmony export */   UserService: function() { return /* binding */ UserService; }\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client */ \"./src/lib/api/client.js\");\n/**\r\n * API service for Patients\r\n */ \nconst PatientService = {\n    // Get all patients\n    getAllPatients: async function() {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/patients\", {\n            params: filters\n        });\n        return response.data;\n    },\n    // Get patient by ID\n    getPatient: async (id)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/patients/\".concat(id));\n        return response.data;\n    },\n    // Create new patient\n    createPatient: async (patientData)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/patients\", patientData);\n        return response.data;\n    },\n    // Update patient\n    updatePatient: async (id, patientData)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/patients/\".concat(id), patientData);\n        return response.data;\n    },\n    // Delete patient\n    deletePatient: async (id)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"delete\"](\"/patients/\".concat(id));\n        return response.data;\n    }\n};\n/**\r\n * API service for Investigations\r\n */ const InvestigationService = {\n    // Get all investigations\n    getAllInvestigations: async ()=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/investigations\");\n        return response.data;\n    },\n    // Get all investigations for a patient\n    getPatientInvestigations: async (patientId)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/investigations?patientId=\".concat(patientId));\n        return response.data;\n    },\n    // Get investigation by ID\n    getInvestigation: async (id)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/investigations/\".concat(id));\n        return response.data;\n    },\n    // Create new investigation with proper date handling\n    createInvestigation: async (investigationData)=>{\n        // Make sure date fields are properly formatted\n        const formattedData = {\n            ...investigationData,\n            date: investigationData.date ? new Date(investigationData.date).toISOString() : new Date().toISOString(),\n            followUpDate: investigationData.followUpNeeded && investigationData.followUpDate ? new Date(investigationData.followUpDate).toISOString() : null\n        };\n        try {\n            const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/investigations\", formattedData);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error creating investigation:\", error);\n            throw error;\n        }\n    },\n    // Update investigation with proper date handling\n    updateInvestigation: async (id, investigationData)=>{\n        // Make sure date fields are properly formatted\n        const formattedData = {\n            ...investigationData,\n            date: investigationData.date ? new Date(investigationData.date).toISOString() : new Date().toISOString(),\n            followUpDate: investigationData.followUpNeeded && investigationData.followUpDate ? new Date(investigationData.followUpDate).toISOString() : null\n        };\n        try {\n            const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/investigations/\".concat(id), formattedData);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error updating investigation:\", error);\n            throw error;\n        }\n    },\n    // Delete investigation\n    deleteInvestigation: async (id)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"delete\"](\"/investigations/\".concat(id));\n        return response.data;\n    }\n};\n/**\r\n * API service for Users\r\n */ const UserService = {\n    // Get all users (admin only)\n    getAllUsers: async ()=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/users\");\n        return response.data;\n    },\n    // Get current user info\n    getCurrentUser: async ()=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/users/me\");\n        return response.data;\n    },\n    // Create new user (admin only)\n    createUser: async (userData)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/users\", userData);\n        return response.data;\n    },\n    // Update user\n    updateUser: async (id, userData)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/users/\".concat(id), userData);\n        return response.data;\n    },\n    // Delete user (admin only)\n    deleteUser: async (id)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"delete\"](\"/users/\".concat(id));\n        return response.data;\n    },\n    // Update user password\n    updatePassword: async (currentPassword, newPassword)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/users/change-password\", {\n            currentPassword,\n            newPassword\n        });\n        return response.data;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/api/services.js\n"));

/***/ })

});