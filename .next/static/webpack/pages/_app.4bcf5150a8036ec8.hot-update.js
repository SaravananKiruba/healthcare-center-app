"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/context/AppContext.js":
/*!***********************************!*\
  !*** ./src/context/AppContext.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppProvider: function() { return /* binding */ AppProvider; },\n/* harmony export */   useAppContext: function() { return /* binding */ useAppContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n/* harmony import */ var _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/api-nextjs */ \"./src/services/api-nextjs.js\");\n/* harmony import */ var _AuthContext_nextjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AuthContext-nextjs */ \"./src/context/AuthContext-nextjs.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\nconst AppContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst useAppContext = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext);\n    if (!context) {\n        throw new Error(\"useAppContext must be used within an AppProvider\");\n    }\n    return context;\n};\n_s(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst AppProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    // State for patients and related data\n    const [patients, setPatients] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [investigations, setInvestigations] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isApiHealthy, setIsApiHealthy] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // User related data\n    const [currentUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        id: \"1\",\n        name: \"Dr. John Doe\",\n        role: \"doctor\"\n    });\n    // Doctor data\n    const [doctors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            id: \"1\",\n            name: \"Dr. John Doe\",\n            specialty: \"General Medicine\"\n        },\n        {\n            id: \"2\",\n            name: \"Dr. Jane Smith\",\n            specialty: \"Pediatrics\"\n        },\n        {\n            id: \"3\",\n            name: \"Dr. Robert Johnson\",\n            specialty: \"Orthopedics\"\n        }\n    ]);\n    // Get authentication state from AuthContext\n    const { isAuthenticated } = (0,_AuthContext_nextjs__WEBPACK_IMPORTED_MODULE_3__.useAuth)();\n    // Error handling utility\n    const handleError = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((error, operation)=>{\n        console.error(\"Error in \".concat(operation, \":\"), error);\n        const message = error.message || \"Failed to \".concat(operation);\n        setError(message);\n        // Auto-clear error after 5 seconds\n        setTimeout(()=>setError(null), 5000);\n        return message;\n    }, []);\n    // Check API health\n    const checkApiHealth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        try {\n            const healthy = await _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__.apiUtils.isApiHealthy();\n            setIsApiHealthy(healthy);\n            return healthy;\n        } catch (error) {\n            setIsApiHealthy(false);\n            return false;\n        }\n    }, []);\n    // Load patients data from API\n    const fetchPatients = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        if (!isAuthenticated) return;\n        setIsLoading(true);\n        setError(null);\n        try {\n            const data = await _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__.patientsAPI.getAllPatients();\n            setPatients(Array.isArray(data) ? data : data.patients || []);\n            setError(null);\n        } catch (err) {\n            var _err_response;\n            console.error(\"Failed to fetch patients:\", err);\n            // Only set error if it's not a 401 (unauthorized) error\n            if (((_err_response = err.response) === null || _err_response === void 0 ? void 0 : _err_response.status) !== 401) {\n                handleError(err, \"fetch patients\");\n            }\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        isAuthenticated,\n        handleError\n    ]);\n    // Load investigations data\n    const fetchInvestigations = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async function() {\n        let patientId = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n        if (!isAuthenticated) return;\n        setIsLoading(true);\n        setError(null);\n        try {\n            const data = await _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__.investigationsAPI.getAllInvestigations(patientId);\n            setInvestigations(Array.isArray(data) ? data : data.investigations || []);\n            setError(null);\n        } catch (err) {\n            var _err_response;\n            console.error(\"Failed to fetch investigations:\", err);\n            if (((_err_response = err.response) === null || _err_response === void 0 ? void 0 : _err_response.status) !== 401) {\n                handleError(err, \"fetch investigations\");\n            }\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        isAuthenticated,\n        handleError\n    ]);\n    // Initial data load\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isAuthenticated) {\n            checkApiHealth();\n            fetchPatients();\n            fetchInvestigations();\n        }\n    }, [\n        isAuthenticated,\n        fetchPatients,\n        fetchInvestigations,\n        checkApiHealth\n    ]);\n    // Add a new patient\n    const addPatient = async (patientData)=>{\n        if (!patientData || typeof patientData !== \"object\") {\n            throw new Error(\"Valid patient data is required\");\n        }\n        // Additional validation for required fields\n        if (!patientData.mobileNumber) {\n            throw new Error(\"Mobile number is required\");\n        }\n        if (!patientData.chiefComplaints) {\n            throw new Error(\"Chief complaints are required\");\n        }\n        setIsLoading(true);\n        setError(null);\n        try {\n            // Add unique ID and timestamp if not present\n            const patientWithDefaults = {\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_4__.v4)(),\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString(),\n                ...patientData\n            };\n            const newPatient = await _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__.patientsAPI.createPatient(patientWithDefaults);\n            // Ensure JSON fields are properly parsed\n            const parsedPatient = {\n                ...newPatient,\n                medicalHistory: typeof newPatient.medicalHistory === \"string\" ? JSON.parse(newPatient.medicalHistory) : newPatient.medicalHistory,\n                physicalGenerals: typeof newPatient.physicalGenerals === \"string\" ? JSON.parse(newPatient.physicalGenerals) : newPatient.physicalGenerals,\n                menstrualHistory: typeof newPatient.menstrualHistory === \"string\" ? JSON.parse(newPatient.menstrualHistory) : newPatient.menstrualHistory,\n                foodAndHabit: typeof newPatient.foodAndHabit === \"string\" ? JSON.parse(newPatient.foodAndHabit) : newPatient.foodAndHabit\n            };\n            // Add the new patient to the state\n            setPatients((prevPatients)=>[\n                    ...prevPatients,\n                    parsedPatient\n                ]);\n            setError(null);\n            return parsedPatient;\n        } catch (err) {\n            const errorMessage = handleError(err, \"create patient\");\n            throw new Error(errorMessage);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Update an existing patient\n    const updatePatient = async (patientId, updatedData)=>{\n        if (!patientId) throw new Error(\"Patient ID is required\");\n        if (!updatedData || typeof updatedData !== \"object\") {\n            throw new Error(\"Valid patient data is required\");\n        }\n        setIsLoading(true);\n        setError(null);\n        try {\n            const dataWithTimestamp = {\n                ...updatedData,\n                updatedAt: new Date().toISOString()\n            };\n            const updatedPatient = await _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__.patientsAPI.updatePatient(patientId, dataWithTimestamp);\n            // Ensure JSON fields are properly parsed\n            const parsedPatient = {\n                ...updatedPatient,\n                medicalHistory: typeof updatedPatient.medicalHistory === \"string\" ? JSON.parse(updatedPatient.medicalHistory) : updatedPatient.medicalHistory,\n                physicalGenerals: typeof updatedPatient.physicalGenerals === \"string\" ? JSON.parse(updatedPatient.physicalGenerals) : updatedPatient.physicalGenerals,\n                menstrualHistory: typeof updatedPatient.menstrualHistory === \"string\" ? JSON.parse(updatedPatient.menstrualHistory) : updatedPatient.menstrualHistory,\n                foodAndHabit: typeof updatedPatient.foodAndHabit === \"string\" ? JSON.parse(updatedPatient.foodAndHabit) : updatedPatient.foodAndHabit\n            };\n            // Update the patient in the state\n            setPatients((prevPatients)=>prevPatients.map((patient)=>patient.id === patientId ? parsedPatient : patient));\n            setError(null);\n            return parsedPatient;\n        } catch (err) {\n            const errorMessage = handleError(err, \"update patient\");\n            throw new Error(errorMessage);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Delete a patient\n    const deletePatient = async (patientId)=>{\n        if (!patientId) throw new Error(\"Patient ID is required\");\n        setIsLoading(true);\n        setError(null);\n        try {\n            await _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__.patientsAPI.deletePatient(patientId);\n            // Remove the patient from the state\n            setPatients((prevPatients)=>prevPatients.filter((patient)=>patient.id !== patientId));\n            setError(null);\n            return true;\n        } catch (err) {\n            const errorMessage = handleError(err, \"delete patient\");\n            throw new Error(errorMessage);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Add investigation\n    const addInvestigation = async (investigationData)=>{\n        if (!investigationData || typeof investigationData !== \"object\") {\n            throw new Error(\"Valid investigation data is required\");\n        }\n        setIsLoading(true);\n        setError(null);\n        try {\n            const investigationWithDefaults = {\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_4__.v4)(),\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString(),\n                ...investigationData\n            };\n            const newInvestigation = await _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__.investigationsAPI.createInvestigation(investigationWithDefaults);\n            setInvestigations((prevInvestigations)=>[\n                    ...prevInvestigations,\n                    newInvestigation\n                ]);\n            setError(null);\n            return newInvestigation;\n        } catch (err) {\n            const errorMessage = handleError(err, \"create investigation\");\n            throw new Error(errorMessage);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Clear error manually\n    const clearError = ()=>setError(null);\n    // Refresh all data\n    const refreshData = async ()=>{\n        await Promise.all([\n            fetchPatients(),\n            fetchInvestigations(),\n            checkApiHealth()\n        ]);\n    };\n    const value = {\n        // Data\n        patients,\n        investigations,\n        doctors,\n        currentUser,\n        // State\n        isLoading,\n        error,\n        isApiHealthy,\n        // Actions\n        addPatient,\n        updatePatient,\n        deletePatient,\n        addInvestigation,\n        fetchPatients,\n        fetchInvestigations,\n        clearError,\n        refreshData,\n        checkApiHealth,\n        // API services\n        patientsAPI: _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__.patientsAPI,\n        investigationsAPI: _services_api_nextjs__WEBPACK_IMPORTED_MODULE_2__.investigationsAPI\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\BOOLA\\\\Agaram\\\\Source\\\\healthcare-center-app\\\\src\\\\context\\\\AppContext.js\",\n        lineNumber: 323,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(AppProvider, \"2HQ4TkilpE6RsYcI+jFqVynXXDE=\", false, function() {\n    return [\n        _AuthContext_nextjs__WEBPACK_IMPORTED_MODULE_3__.useAuth\n    ];\n});\n_c = AppProvider;\n/* harmony default export */ __webpack_exports__[\"default\"] = (AppContext);\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/context/AppContext.js\n"));

/***/ })

});